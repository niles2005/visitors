[{"userName":"test","proposal":"aaa","email":null,"reply":"This ZIP archive contains most of the static HTML files that comprise this website, including all of the SQL Syntax and the C/C++ interface specs and other miscellaneous documentation.","createTime":24354},{"userName":"hjt","proposal":"tey","email":"rtyr","reply":"aaaaa","createTime":1375327597995},{"userName":"yyy","proposal":"fsdgbsdsgdmg","email":"hhhhh@dst.nty","reply":null,"createTime":1375332473996},{"userName":"ewf\"","proposal":"fe","email":"fs@kd.con","reply":null,"createTime":1375332821952},{"userName":"dfk}","proposal":"{df[dfwf{[jjkj","email":"fdd@ejf.co","reply":"<br>\nsdfas flsafjsad ;f asdf\nsd\nfa sf\ndsf\nds\nf\nasd\nf\nasd\nfsa\ndf\n\ns\n\nsdf asd\nf&s &&&","createTime":1375332896596},{"userName":"sss","proposal":"dsfsdf","email":null,"reply":null,"createTime":1375338441625},{"userName":"aaa","proposal":"sdfja fafkldsf sl\r\nsdfs","email":"aaa@aaa.net","reply":null,"createTime":1375338676765},{"userName":"aaa","proposal":"dsfadf","email":null,"reply":"package com.inesazt.visitors;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\n\nimport javax.servlet.ServletConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletOutputStream;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.google.gson.JsonElement;\nimport com.google.gson.JsonObject;\nimport com.google.gson.JsonParser;\n\n@WebServlet(name = \"WorkServlet\", urlPatterns = { \"/work\" }, loadOnStartup=0)\npublic class WorkServlet extends HttpServlet {\n\tpublic void init(ServletConfig servletConfig) throws ServletException {\n        try {\n        \tString realPath = servletConfig.getServletContext().getRealPath(\"\");\n        \tServerConfig.initInstance(realPath);\n        \tGlobal.initInstance();\n        }\n        catch (Exception ex) {\n            ex.printStackTrace();\n        }\n\t}\n\n\tpublic void doGet(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows IOException, ServletException {\n\t\tthis.doPage(request, response);\n\t}\n\t\n\tpublic void doPost(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows IOException, ServletException {\n\t\tthis.doPage(request, response);\n\t}\n\t\n\tpublic void doPage(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows IOException, ServletException {\n\t\trequest.setCharacterEncoding(\"UTF-8\");\n\t\tServletOutputStream sos = response.getOutputStream();\n\t\tresponse.setContentType(\"text/html; charset=UTF-8\");\n\t\t\n\t\tString retInfo = doWork(request);\n\t\t\n\t\tif(retInfo != null) {\n\t\t\tString callback = request.getParameter(\"callback\");\n\t\t\tif(callback != null) {\n\t\t\t\tretInfo = callback + \"(\" + retInfo + \");\";\n\t\t\t}\n\t\t\t\n\t\t\tsos.write(retInfo.getBytes(\"UTF-8\"));\n\t\t}\n\t}\n\t\n\tprivate String doWork(HttpServletRequest request) {\n\t\tString action = request.getParameter(\"action\");\n\t\tif(action == null) {\n\t\t\treturn WebUtil.error(\"unknown action!\");\n\t\t}\n\t\tif(action.equals(\"initdatas\")) {\n\t\t\treturn Global.getInstance().getInitDatas();\n\t\t} else if(action.equals(\"listcards\")) {\n\t\t\treturn Global.getInstance().getCards().doList();\n\t\t} else if(action.equals(\"setcard\")) {\n\t\t\tString cardId = request.getParameter(\"id\");\n\t\t\tString strName = request.getParameter(\"name\");\n\t\t\tString strRole = request.getParameter(\"role\");\n\t\t\tString strInfo = request.getParameter(\"info\");\n\t\t\tboolean actived = Boolean.parseBoolean(request.getParameter(\"actived\"));\n\t\t\t\n\t\t\treturn Global.getInstance().getCards().setCard(cardId,strName,strRole,strInfo,actived);\n\t\t} else if(action.equals(\"listdevices\")) {\n\t\t\treturn Global.getInstance().getDevices().doList();\n\t\t} else if(action.equals(\"setdevice\")) {\n\t\t\tString deviceId = request.getParameter(\"id\");\n\t\t\tString strLocate = request.getParameter(\"locate\");\n\t\t\tString strInfo = request.getParameter(\"info\");\n\t\t\tboolean actived = Boolean.parseBoolean(request.getParameter(\"actived\"));\n\t\t\t\n\t\t\treturn Global.getInstance().getDevices().setDevice(deviceId,strLocate,strInfo,actived);\n\t\t} else if(action.equals(\"loadevents\")) {\n\t\t\tString cardId = request.getParameter(\"cardid\");\n\t\t\tString strDate = request.getParameter(\"date\");\n\t\t\tCard card = Global.getInstance().getCard(cardId);\n\t\t\tif(card == null) {\n\t\t\t\treturn WebUtil.error(\"Can not find card for cardId:\" + cardId);\n\t\t\t}\n\t\t\treturn card.loadEvents(strDate);\n\t\t} else if(action.equals(\"loadtodayevents\")) {\n\t\t\tString cardId = request.getParameter(\"cardid\");\n\t\t\tCard card = Global.getInstance().getCard(cardId);\n\t\t\tif(card == null) {\n\t\t\t\treturn WebUtil.error(\"Can not find card for cardId:\" + cardId);\n\t\t\t}\n\t\t\treturn card.loadTodayEvents();\n\t\t} else if(action.equals(\"loadallevents\")) {\n\t\t\treturn Global.getInstance().getEvents().doList();\n\t\t} else if(action.equals(\"enumlocations\")) {\n\t\t\treturn DataEnums.loadLocateEnums();\n\t\t} else if(action.equals(\"enumroles\")) {\n\t\t\treturn DataEnums.loadRoleEnums();\n\t\t} else if( action.equals(\"unregister\")){\n\t\t\treturn Global.getInstance().getUnregister();\n\t\t} else if(action.equals(\"listfeedbacks\")){\n\t\t\treturn Global.getInstance().getFeedbacks().doList();\n\t\t} else if(action.equals(\"addfeedback\")){\n\t\t\tString userName = request.getParameter(\"username\");\n\t\t\tString proposal = request.getParameter(\"proposal\");\n\t\t\tString emailAddress = request.getParameter(\"email\");\n\t\t\tFeedback feedback = new Feedback(userName, proposal, emailAddress,System.currentTimeMillis());\n\t\t\t\n\t\t\treturn Global.getInstance().getFeedbacks().updateFeedbacks(feedback);\n\t\t}else if(action.equals(\"addreply\")){\n\t\t\ttry {\n\t\t\t\tBufferedReader reader = request.getReader();\n\t\t\t\tString str = reader.readLine();\n\t\t\t\tif(str == null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tStringBuilder strBuff = new StringBuilder();\n\t\t\t\twhile(str != null) {\n\t\t\t\t\tstrBuff.append(str);\n\t\t\t\t\tstr = reader.readLine();\n\t\t\t\t}\n\t\t\t\tJsonParser parser = new JsonParser();\n\t\t\t\tJsonObject json = (JsonObject) parser.parse(strBuff.toString());\n\t\t\t\t\n\t\t\t\tlong createTime = -1;\n\t\t\t\tString reply = null;\n\t\t\t\tJsonElement jsonElement = json.get(\"createtime\");\n\t\t\t\tif(jsonElement != null) {\n\t\t\t\t\tcreateTime = Long.parseLong(jsonElement.getAsString());\n\t\t\t\t}\n\t\t\t\tjsonElement = json.get(\"reply\");\n\t\t\t\tif(jsonElement != null) {\n\t\t\t\t\treply = jsonElement.getAsString();\n\t\t\t\t}\n\t\t\t\treturn Global.getInstance().getFeedbacks().updateReply(createTime,reply);\n\t\t\t} catch(Exception ex) {\n\t\t\t\tex.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n","createTime":1375338724312},{"userName":"sss","proposal":"sdfasf sd fsdfsaaf","email":null,"reply":null,"createTime":1375338999062},{"userName":"sdfsd","proposal":"sdgadsg","email":null,"reply":null,"createTime":1375339005359},{"userName":"sdfasdf","proposal":"dsfasdg","email":null,"reply":null,"createTime":1375339019593},{"userName":"xxxx","proposal":"sfsfaf","email":null,"reply":null,"createTime":1375339694250},{"userName":"xxxx","proposal":"sfsfaf","email":null,"reply":null,"createTime":1375339707281},{"userName":"zzzz","proposal":"sfsfaf","email":null,"reply":null,"createTime":1375339738718},{"userName":"zzzz111","proposal":"sfsfaf","email":null,"reply":null,"createTime":1375339828671},{"userName":"zzzz111","proposal":"sfsfaf","email":null,"reply":null,"createTime":1375340112671},{"userName":"zzzz222","proposal":"sfsfaf","email":null,"reply":"\tpublic String doList(){\n\t\treturn JSON.toJSONString(feedbacks);\n\t}\n\t\n\tpublic String updateFeedbacks(Feedback feedback){\n\t\taddFeedback(feedback);\n\t\tsaveFeedbacks();\n\t\treturn JSON.toJSONString(feedbacks);\n\t}\n","createTime":1375340164671},{"userName":"zzzz333","proposal":"sfsfaf","email":null,"reply":null,"createTime":1375340242218},{"userName":"zzzz333","proposal":"sfsfaf","email":null,"reply":null,"createTime":1375340615859},{"userName":"zzzz444","proposal":"sfsfaf","email":null,"reply":"        findCards: function(name) {\n            if(this._selectRole) {\n                this._selectRole.clearFocus();\n                this._selectRole = null;\n            }\n            var c,card;\n            var arr = [];\n            name = $.trim(name);\n            if(name.length !== 0) {\n                for(c in this._cards) {\n                    card = this._cards[c];\n                    if(card.getId().indexOf(name) !== -1) {\n                        arr.push(card);\n                    } else if(card.getName().indexOf(name) !== -1) {\n                        arr.push(card);\n                    }\n                }\n            }\n            return arr;\n        },\n","createTime":1375341405531},{"userName":"zzzz444","proposal":"sfsfaf","email":null,"reply":null,"createTime":1375341461203},{"userName":"zzz","proposal":"zzzzz","email":null,"reply":"<><br> ","createTime":1375341515531},{"userName":"中文","proposal":"中文中文中文中文中文","email":null,"reply":null,"createTime":1375412154734},{"userName":"aaaa","proposal":"(function() {\n    mapwork.OverviewControl = OverviewControl;\n    OverviewControl.ID = \"OverviewControl\";\n\n    var EXTEND = mapwork.Control;\n    var utils = mapwork.utils;\n    \n    function OverviewControl(isOpen) {\n        if(EXTEND) {\n            EXTEND.apply(this,arguments);\n        }\n        this._width = 125;\n        this._height = 125;\n        this._controlId = OverviewControl.ID;\n        this._div.style[\"zIndex\"] = 9900;\n        this._div.style.position = \"absolute\";\n        this._div.style.border = \"2px solid #84A9D2\";\n        this._div.style[\"backgroundColor\"] = \"#FFF\";\n        this._div.style.overflow = \"hidden\";\n        this._div.style[\"-webkit-user-select\"] = \"none\";\n        this._div.style.right =  \"0px\";\n        this._div.style.bottom = \"0px\";\n    \n        this._bgRect = new mapwork.MapShadowRect(\"MapShadowRect\");\n        \n        if(isOpen) {\n            this._isOpen = true;\n        } else {\n            this._isOpen = false;\n        }\n    }\n\n    OverviewControl.prototype = {\n        setMap: function(map) {\n            this._map = map;\n            this._mapLocation = map.getMapLocation();\n            this.createOverviewMap();\n            this.createToggleButton();\n            \n            this.resetBGMap();\n            this.resetCurrectMapSizeRect();\n            \n            if(this._isOpen) {\n                this._div.style.width = this._width + \"px\";\n                this._div.style.height = this._height + \"px\";\n                this._toggleImage.style.left = \"0px\";\n                this._toggleImage.style.top = \"0px\";\n            } else {\n                this._div.style.width = \"17px\";\n                this._div.style.height = \"17px\";\n                this._toggleImage.style.left = \"-19px\";\n                this._toggleImage.style.top = \"0px\";\n            }","email":null,"reply":null,"createTime":1375414418406}]